{
    "description": "description",
    "uuid": "6B854C4C-72F9-11EA-BB9C-57DD78216B54",
    "completionSets": [
        {
            "name": "regex.assertion.pla",
            "defaultAppend": "",
            "strings": [
                {
                    "//": "输入字符后面必须是",
                    "string": "pla",
                    "replace": "正向先行断言: 输入字符后面必须是"
                }
            ]
        },
        {
            "name": "regex.assertion.plb",
            "defaultAppend": "",
            "strings": [
                {
                    "//": "输入字符前面必须是",
                    "string": "plb",
                    "replace": "正向后行断言：输入字符前面必须是"
                }
            ]
        },
        {
            "name": "regex.assertion.nla",
            "defaultAppend": "",
            "strings": [
                {
                    "//": "输入字符后面不能有",
                    "string": "nla",
                    "replace": "负向先行断言：输入字符后面不能有"
                }
            ]
        },
        {
            "name": "regex.assertion.nlb",
            "defaultAppend": "",
            "strings": [
                {
                    "//": "输入字符前面不能有",
                    "string": "nlb",
                    "replace": "负向后行断言：输入字符前面不能有"
                }
            ]
        },
        {
            "//": "choice is not supported",
            "name": "test.choice",
            "defaultAppend": "",
            "strings": [
                {
                    "string": "choice",
                    "replace": "${1|const,var|}\n$2\n$3"
                }
            ]
        },
        {
            "//": "variable is supported",
            "name": "test.variable",
            "defaultAppend": "-$COMPLETION$0",
            "string": "variable"
        },
        {
            "//": "index is supported",
            "name": "test.test",
            "defaultAppend": "",
            "string": "index",
            "replace": "${1:attr1}\n${2:attr2}\n${3:attr3}"
        },
        {
            "//": "index2",
            "name": "test.captureindex",
            "defaultAppend": "",
            "string": "attr",
            "replace": "attribute$0"
        },
        {
            "name": "markdown.normal",
            "defaultAppend": "",
            "strings": [
                {
                    "string": "normal",
                    "replace": "normal\n$0"
                }
            ]
        }
    ],
    "contexts": [
        {
            "//": "基准线",
            "description": "normal(baseline)",
            "scope": "text.html.markdown",
            "pattern": "(no[a-zA-Z0-9]*)",
            "completionCaptureIndex": 1,
            "completionSetNames": [
                "markdown.normal"
            ]
        },
        {
            "description": "test",
            "scope": "source.json | text.html.markdown | source.python",
            "pattern": "(ch[a-zA-Z0-9\\-]*)",
            "completionCaptureIndex": 1,
            "completionSetNames": [
                "test.choice"
            ]
        },
        {
            "description": "test",
            "scope": "source.json | text.html.markdown | source.python",
            "pattern": "(va[a-zA-Z0-9]*)",
            "completionCaptureIndex": 1,
            "completionSetNames": [
                "test.variable"
            ]
        },
        {
            "description": "test",
            "scope": "source.json | text.html.markdown | source.python",
            "pattern": "([a-zA-Z0-9]+)",
            "completionCaptureIndex": 2,
            "completionSetNames": [
                "test.test.$3.attr3",
                "test.captureindex"
            ]
        },
        {
            "description": "regex 正向先行",
            "scope": "source.json | text.html.markdown | source.python",
            "//": "后面必须是",
            "pattern": "(pl(?=\\s))",
            "completionCaptureIndex": 1,
            "completionSetNames": [
                "regex.assertion.pla"
            ]
        },
        {
            "description": "regex 正向后行",
            "scope": "source.json | text.html.markdown | source.python",
            "//": "前面必须是",
            "pattern": "(pl(?<=\\S))",
            "completionCaptureIndex": 1,
            "completionSetNames": [
                "regex.assertion.plb"
            ]
        },
        {
            "description": "regex 负向先行",
            "scope": "source.json | text.html.markdown | source.python",
            "//": "后面必须不能是",
            "pattern": "",
            "completionCaptureIndex": 1,
            "completionSetNames": [
                "regex.assertion.nla"
            ]
        },
        {
            "description": "regex 负向后行",
            "scope": "source.json | text.html.markdown | source.python",
            "//": "前面必须不能是",
            "pattern": "(?<!:)(?:^|\\s|;)([a-zA-Z\\-+]+)",
            "completionCaptureIndex": 1,
            "completionSetNames": [
                "regex.assertion.nlb"
            ]
        }
    ]
}